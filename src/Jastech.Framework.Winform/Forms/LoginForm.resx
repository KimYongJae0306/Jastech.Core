<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbxEngineer.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>